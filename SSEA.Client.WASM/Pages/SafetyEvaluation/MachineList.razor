@page "/safetyEvaluation/machineList"

@layout MainLayout

@attribute [Authorize]

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="padding-top: 10px; margin-bottom: 40px;">
    <MudCard Elevation="0" Outlined="true">
        <MudCardHeader Style="padding-bottom: 0px;">
            <CardHeaderContent>
                <MudText Typo="Typo.h5"><strong>Machine list</strong></MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <AuthorizeView Roles="SafetyEvaluationAdmin, NormalUser">
                    <Authorized>
                        <MudButton @onclick="CreateNew" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Create" Color="Color.Primary" Style="margin-top:5px; margin-right:8px;">Create new machine</MudButton>
                    </Authorized>
                </AuthorizeView>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <hr />
            <MudGrid Style="margin-top: 0px;">
                <MudItem xs="1" Style="padding-bottom: 14px; padding-top: 18px;">
                    <MudButton @onclick="Search" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Search" Size="Size.Large" Style="width: 100%; height: 100%;">Search</MudButton>
                </MudItem>
                <MudItem xs="3">
                    <MudTextField @bind-Value="machineName" Label="Machine name" Variant="Variant.Outlined"></MudTextField>
                </MudItem>
                <MudItem xs="2">
                    <MudSelect @bind-Value="stateId" T="int" Label="State of record" Strict="true" Variant="Variant.Outlined" Format="F2">
                        <MudSelectItem T="int" Value="@(0)">All</MudSelectItem>
                        <MudSelectItem T="int" Value="@(1)">Nová</MudSelectItem>
                        <MudSelectItem T="int" Value="@(2)">Rozpracovaná</MudSelectItem>
                        <MudSelectItem T="int" Value="@(3)">S vybranou řídící jednotkou</MudSelectItem>
                        <MudSelectItem T="int" Value="@(4)">Vyhodnocená - validní</MudSelectItem>
                        <MudSelectItem T="int" Value="@(5)">Vyhodnocená - invalidní</MudSelectItem>
                    </MudSelect>
                </MudItem>
                <MudItem xs="2">
                    <MudSelect @bind-Value="machineTypeId" T="int" Label="Machine type" Strict="true" Variant="Variant.Outlined" Format="F2">
                        <MudSelectItem T="int" Value="@(0)">All</MudSelectItem>
                        @foreach (var item in machineTypes)
                        {
                            <MudSelectItem T="int" Value="@(item.Id)">@item.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="2">
                    <MudSelect @bind-Value="producerId" T="int" Label="Producer" Strict="true" Variant="Variant.Outlined" Format="F2">
                        <MudSelectItem T="int" Value="@(0)">All</MudSelectItem>
                        @foreach (var item in producers)
                        {
                            <MudSelectItem T="int" Value="@(item.Id)">@item.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="2">
                    <MudSelect @bind-Value="evaluationMethodId" T="int" Label="Evaluation method" Strict="true" Variant="Variant.Outlined" Format="F2">
                        <MudSelectItem T="int" Value="@(0)">All</MudSelectItem>
                        @foreach (var item in evaluationMethods)
                        {
                            <MudSelectItem T="int" Value="@(item.Id)">@item.Shortcut</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <hr style="margin-top:16px;" />
            @if (searching == true)
            {
                <MudText Align="Align.Center" Style="margin: 50px;">
                    <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
                </MudText>
            }
            else
            {
                <MudTable T="MachineListModel" OnRowClick="@(args => GoToMachineDetail(args))" Items="@machines" Hover="true" Elevation="0" Style="margin-top: 20px;" Dense="false" Outlined="true">
                    <HeaderContent>
                        <MudTh>Name</MudTh>
                        <MudTh>State</MudTh>
                        <MudTh>Machine type</MudTh>
                        <MudTh>Type of logic</MudTh>
                        <MudTh>Producer</MudTh>
                        <MudTh>Evaluation method</MudTh>
                        <MudTh>Communication</MudTh>
                    </HeaderContent>
                    <ColGroup>
                        <col style="width:20%;" />Name
                        <col style="width:15%;" />State
                        <col style="width:15%;" />Machine type
                        <col style="width:15%;" />Type of logic
                        <col style="width:15%;" />Producer
                        <col style="width:10%;" />Evaluation method
                        <col style="width:10%;" />Communication
                    </ColGroup>
                    <RowTemplate>
                        <MudTd DataLabel="Name">@context.Name</MudTd>
                        <MudTd DataLabel="State">@context.CurrentState.Name</MudTd>
                        <MudTd DataLabel="Machine type">@context.MachineType</MudTd>
                        <MudTd DataLabel="Type of logic">@context.TypeOfLogic</MudTd>
                        <MudTd DataLabel="Producer">@context.Producer</MudTd>
                        <MudTd DataLabel="Evaluation method">@context.EvaluationMethod</MudTd>
                        <MudTd DataLabel="Communication">@context.SafetyCommunication</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[]{10, 15}" />
                    </PagerContent>
                </MudTable>
            }
            @if (notFound)
            {
                <MudText Align="Align.Center" Style="margin: 50px;" Typo="Typo.h6">
                    Found nothing :(
                </MudText>
            }
        </MudCardContent>
    </MudCard>
    <div style="margin: 5px; text-align: right; font-size: 11px;">
        Form ID: MACHINE LIST
    </div>
</MudContainer>

@code {

    [Inject]
    private MachineFacade machineFacade { get; set; }

    [Inject]
    private CodeListFacade codeListFacade { get; set; }

    [Inject]
    private NavigationManager navigationManager { get; set; }

    [Inject]
    private IDialogService dialogService { get; set; }

    private ICollection<MachineListModel> machines = new List<MachineListModel>();

    private string machineName = string.Empty;
    private int stateId;
    private int machineTypeId;
    private int evaluationMethodId;
    private int producerId;
    private bool searching = false;
    private bool notFound = false;

    private ICollection<EvaluationMethodModel> evaluationMethods = new List<EvaluationMethodModel>();
    private ICollection<MachineTypeModel> machineTypes = new List<MachineTypeModel>();
    private ICollection<ProducerModel> producers = new List<ProducerModel>();

    protected override async Task OnInitializedAsync()
    {
        evaluationMethods = await codeListFacade.GetAllEvaluationMethodsAsync();
        machineTypes = await codeListFacade.GetAllMachineTypesAsync();
        producers = await codeListFacade.GetAllProducersAsync();
    }

    private void CreateNew()
    {
        navigationManager.NavigateTo("/safetyEvaluation/machineInsert");
    }

    private async void Search()
    {
        searching = true;
        machines = await machineFacade.GetAllAsync(machineName, stateId, machineTypeId, evaluationMethodId, producerId);
        notFound = machines is null || machines.Count == 0;
        searching = false;
        StateHasChanged();
    }

    private void GoToMachineDetail(TableRowClickEventArgs<MachineListModel> args)
    {
        navigationManager.NavigateTo($"/safetyEvaluation/machineDetail/{args.Item.Id}");
    }

}
