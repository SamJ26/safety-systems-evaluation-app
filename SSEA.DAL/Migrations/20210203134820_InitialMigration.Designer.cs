// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSEA.DAL;

namespace SSEA.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210203134820_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("SY_Role");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("SY_RoleClaim");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("SY_User");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SY_UserClaim");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("SY_UserLogin");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("SY_UserRole");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("SY_UserToken");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.CCF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ForPL")
                        .HasColumnType("bit");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CCF");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.DC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<short>("Max")
                        .HasColumnType("smallint");

                    b.Property<short>("Min")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("DC");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.EvaluationMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Shortcut")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationMethod");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MachineType");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.Norm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CatalogNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NameCZ")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NormCategory")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Norm");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfFunction");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfLogic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccessPoints_MaxCount")
                        .HasColumnType("int");

                    b.Property<int?>("Architecture_max_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Category_max_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Communication")
                        .HasColumnType("bit");

                    b.Property<long?>("EthernetAdresses_MaxCount")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PL_max_Id")
                        .HasColumnType("int");

                    b.Property<int>("SI")
                        .HasColumnType("int");

                    b.Property<int?>("SIL_max_Id")
                        .HasColumnType("int");

                    b.Property<int>("SO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Architecture_max_Id");

                    b.HasIndex("Category_max_Id");

                    b.HasIndex("PL_max_Id");

                    b.HasIndex("SIL_max_Id");

                    b.ToTable("TypeOfLogic");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfSubsystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfSubsystem");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("CCF_relevant")
                        .HasColumnType("bit");

                    b.Property<short>("Channels")
                        .HasColumnType("smallint");

                    b.Property<int?>("DC_max_Id")
                        .HasColumnType("int");

                    b.Property<int?>("DC_min_Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FailureBehavior")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("Logic")
                        .HasColumnType("bit");

                    b.Property<int?>("MTTFd_max_Id")
                        .HasColumnType("int");

                    b.Property<int?>("MTTFd_min_Id")
                        .HasColumnType("int");

                    b.Property<string>("Requirements")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("DC_max_Id");

                    b.HasIndex("DC_min_Id");

                    b.HasIndex("MTTFd_max_Id");

                    b.HasIndex("MTTFd_min_Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.F", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Value")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("F");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.MTTFd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<short>("Max")
                        .HasColumnType("smallint");

                    b.Property<short>("Min")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("MTTFd");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.P", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Value")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("P");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.PL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("PL");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.S", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Value")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("S");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Architecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<short>("Channels")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Diagnostic")
                        .HasColumnType("bit");

                    b.Property<int?>("HFT_Id")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("Logic")
                        .HasColumnType("bit");

                    b.Property<int?>("PFHd_max_Id")
                        .HasColumnType("int");

                    b.Property<double>("SFF_max")
                        .HasColumnType("float");

                    b.Property<double>("SFF_min")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HFT_Id");

                    b.HasIndex("PFHd_max_Id");

                    b.ToTable("Architecture");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Av", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Av");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.CFF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Beta")
                        .HasColumnType("float");

                    b.Property<short>("CCF_max")
                        .HasColumnType("smallint");

                    b.Property<short>("CCF_min")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("CFF");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Fr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Fr");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.HFT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HFT");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.PFHd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PFHd");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Pr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Pr");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.SFF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FailureMode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SFF");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Se", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Se");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.AccessPointSafetyFunction", b =>
                {
                    b.Property<int>("AccessPointId")
                        .HasColumnType("int")
                        .HasColumnName("AccessPoint_Id");

                    b.Property<int>("SafetyFunctionId")
                        .HasColumnType("int")
                        .HasColumnName("SafetyFunction_Id");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.HasKey("AccessPointId", "SafetyFunctionId");

                    b.HasIndex("SafetyFunctionId");

                    b.ToTable("AccessPointSafetyFunction");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.ElementSFF", b =>
                {
                    b.Property<int>("ElementId")
                        .HasColumnType("int")
                        .HasColumnName("Element_Id");

                    b.Property<int>("SFF_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.HasKey("ElementId", "SFF_Id");

                    b.HasIndex("SFF_Id");

                    b.ToTable("ElementSFF");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.MachineNorm", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnType("int")
                        .HasColumnName("Machine_Id");

                    b.Property<int>("NormId")
                        .HasColumnType("int")
                        .HasColumnName("Norm_Id");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.HasKey("MachineId", "NormId");

                    b.HasIndex("NormId");

                    b.ToTable("MachineNorm");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.SafetyFunctionSubsystem", b =>
                {
                    b.Property<int>("SafetyFunctionId")
                        .HasColumnType("int")
                        .HasColumnName("SafetyFunction_Id");

                    b.Property<int>("SubsystemId")
                        .HasColumnType("int")
                        .HasColumnName("Subsystem_Id");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.HasKey("SafetyFunctionId", "SubsystemId");

                    b.HasIndex("SubsystemId");

                    b.ToTable("SafetyFunctionSubsystem");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.SubsystemCCF", b =>
                {
                    b.Property<int>("SubsystemId")
                        .HasColumnType("int")
                        .HasColumnName("Subsystem_Id");

                    b.Property<int>("CCF_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.HasKey("SubsystemId", "CCF_Id");

                    b.HasIndex("CCF_Id");

                    b.ToTable("SubsystemCCF");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.AccessPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.Property<int>("Machine_Id")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Machine_Id");

                    b.ToTable("AccessPoint");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("B10d")
                        .HasColumnType("float");

                    b.Property<double?>("C")
                        .HasColumnType("float");

                    b.Property<int?>("DC_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.Property<double?>("MTTFd_counted")
                        .HasColumnType("float");

                    b.Property<int?>("MTTFd_result_Id")
                        .HasColumnType("int");

                    b.Property<short>("OrderNum")
                        .HasColumnType("smallint");

                    b.Property<int?>("Producer_Id")
                        .HasColumnType("int");

                    b.Property<int>("Subsystem_Id")
                        .HasColumnType("int");

                    b.Property<double?>("d_op")
                        .HasColumnType("float");

                    b.Property<double?>("h_op")
                        .HasColumnType("float");

                    b.Property<double?>("lambda_c")
                        .HasColumnType("float");

                    b.Property<double?>("n_op")
                        .HasColumnType("float");

                    b.Property<double?>("t_cycles")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DC_Id");

                    b.HasIndex("MTTFd_result_Id");

                    b.HasIndex("Producer_Id");

                    b.HasIndex("Subsystem_Id");

                    b.ToTable("Element");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("CodeProtection")
                        .HasColumnType("bit");

                    b.Property<bool>("Communication")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("EvaluationMethod_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("HMI")
                        .HasColumnType("bit");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.Property<bool?>("MachineHelp")
                        .HasColumnType("bit");

                    b.Property<int?>("MachineType_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PLC")
                        .HasColumnType("bit");

                    b.Property<int?>("Producer_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("SafetyMasterInPlace")
                        .HasColumnType("bit");

                    b.Property<bool?>("SecurityOfSafetyParts")
                        .HasColumnType("bit");

                    b.Property<int?>("TypeOfLogic_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationMethod_Id");

                    b.HasIndex("MachineType_Id");

                    b.HasIndex("Producer_Id");

                    b.HasIndex("TypeOfLogic_Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.SafetyFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Av_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("EvaluationMethod_Id")
                        .HasColumnType("int");

                    b.Property<int?>("F_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Fr_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PL_result_Id")
                        .HasColumnType("int");

                    b.Property<int?>("PLr_Id")
                        .HasColumnType("int");

                    b.Property<int?>("P_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Pr_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SILCL_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SIL_result_Id")
                        .HasColumnType("int");

                    b.Property<int?>("S_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Se_Id")
                        .HasColumnType("int");

                    b.Property<int?>("TypeOfFunction_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Av_Id");

                    b.HasIndex("EvaluationMethod_Id");

                    b.HasIndex("F_Id");

                    b.HasIndex("Fr_Id");

                    b.HasIndex("PL_result_Id");

                    b.HasIndex("PLr_Id");

                    b.HasIndex("P_Id");

                    b.HasIndex("Pr_Id");

                    b.HasIndex("SILCL_Id");

                    b.HasIndex("SIL_result_Id");

                    b.HasIndex("S_Id");

                    b.HasIndex("Se_Id");

                    b.HasIndex("TypeOfFunction_Id");

                    b.ToTable("SafetyFunction");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Subsystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Architecture_Id")
                        .HasColumnType("int");

                    b.Property<bool>("CCF_valid")
                        .HasColumnType("bit");

                    b.Property<int?>("CFF_Id")
                        .HasColumnType("int");

                    b.Property<string>("CatalogNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Category_Id")
                        .HasColumnType("int");

                    b.Property<int?>("DC_result_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_updated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HFT_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id_created")
                        .HasColumnType("int");

                    b.Property<int?>("Id_updated")
                        .HasColumnType("int");

                    b.Property<int?>("MTTFd_result_Id")
                        .HasColumnType("int");

                    b.Property<int?>("PFHd_result_Id")
                        .HasColumnType("int");

                    b.Property<int?>("PL_result_Id")
                        .HasColumnType("int");

                    b.Property<double?>("SFF_result")
                        .HasColumnType("float");

                    b.Property<double?>("T1")
                        .HasColumnType("float");

                    b.Property<double?>("T2")
                        .HasColumnType("float");

                    b.Property<int?>("TypeOfSubsystem_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Architecture_Id");

                    b.HasIndex("CFF_Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("DC_result_Id");

                    b.HasIndex("HFT_Id");

                    b.HasIndex("MTTFd_result_Id");

                    b.HasIndex("PFHd_result_Id");

                    b.HasIndex("PL_result_Id");

                    b.HasIndex("TypeOfSubsystem_Id");

                    b.ToTable("Subsystem");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.System.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SY_Entity");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.System.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Entity_Id")
                        .HasColumnType("int");

                    b.Property<bool>("FinalState")
                        .HasColumnType("bit");

                    b.Property<bool>("InitialState")
                        .HasColumnType("bit");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StateNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Entity_Id");

                    b.ToTable("SY_State");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.System.StateTransition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CurrentState_Id")
                        .HasColumnType("int");

                    b.Property<int?>("NextState_Id")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CurrentState_Id");

                    b.HasIndex("NextState_Id");

                    b.ToTable("SY_StateTransition");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.RoleClaim", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.Auth.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserClaim", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserLogin", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserRole", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.Auth.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SSEA.DAL.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSEA.DAL.Entities.Auth.UserToken", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfLogic", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Architecture", "Architecture_max")
                        .WithMany("TypeOfLogics")
                        .HasForeignKey("Architecture_max_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.Category", "Category_max")
                        .WithMany("TypeOfLogics")
                        .HasForeignKey("Category_max_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.PL", "PL_max")
                        .WithMany("TypeOfLogics")
                        .HasForeignKey("PL_max_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.PFHd", "SIL_max")
                        .WithMany("TypeOfLogics")
                        .HasForeignKey("SIL_max_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Architecture_max");

                    b.Navigation("Category_max");

                    b.Navigation("PL_max");

                    b.Navigation("SIL_max");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.Category", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.DC", "DC_max")
                        .WithMany("Categories_DC_max")
                        .HasForeignKey("DC_max_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.DC", "DC_min")
                        .WithMany("Categories_DC_min")
                        .HasForeignKey("DC_min_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.MTTFd", "MTTFd_max")
                        .WithMany("Categories_MTTFd_max")
                        .HasForeignKey("MTTFd_max_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.MTTFd", "MTTFd_min")
                        .WithMany("Categories_MTTFd_min")
                        .HasForeignKey("MTTFd_min_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DC_max");

                    b.Navigation("DC_min");

                    b.Navigation("MTTFd_max");

                    b.Navigation("MTTFd_min");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Architecture", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.HFT", "HFT")
                        .WithMany("Architectures")
                        .HasForeignKey("HFT_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.PFHd", "PFHd_max")
                        .WithMany("Architectures")
                        .HasForeignKey("PFHd_max_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HFT");

                    b.Navigation("PFHd_max");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.AccessPointSafetyFunction", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.AccessPoint", "AccessPoint")
                        .WithMany("AccessPointSafetyFunctions")
                        .HasForeignKey("AccessPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.SafetyFunction", "SafetyFunction")
                        .WithMany("AccessPointSafetyFunctions")
                        .HasForeignKey("SafetyFunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessPoint");

                    b.Navigation("SafetyFunction");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.ElementSFF", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Element", "Element")
                        .WithMany("ElementSFFs")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.SFF", "SFF")
                        .WithMany("ElementSFFs")
                        .HasForeignKey("SFF_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");

                    b.Navigation("SFF");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.MachineNorm", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Machine", "Machine")
                        .WithMany("MachineNorms")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.Norm", "Norm")
                        .WithMany("MachineNorms")
                        .HasForeignKey("NormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("Norm");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.SafetyFunctionSubsystem", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.SafetyFunction", "SafetyFunction")
                        .WithMany("SafetyFunctionSubsystems")
                        .HasForeignKey("SafetyFunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Subsystem", "Subsystem")
                        .WithMany("SafetyFunctionSubsystems")
                        .HasForeignKey("SubsystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SafetyFunction");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.JoinEntities.SubsystemCCF", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.CCF", "CCF")
                        .WithMany("SubsystemCCFs")
                        .HasForeignKey("CCF_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Subsystem", "Subsystem")
                        .WithMany("SubsystemCCFs")
                        .HasForeignKey("SubsystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CCF");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.AccessPoint", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Machine", "Machine")
                        .WithMany("AccessPoints")
                        .HasForeignKey("Machine_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Element", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.DC", "DC")
                        .WithMany("Elements")
                        .HasForeignKey("DC_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.MTTFd", "MTTFd_result")
                        .WithMany("Elements")
                        .HasForeignKey("MTTFd_result_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Producer", "Producer")
                        .WithMany("Elements")
                        .HasForeignKey("Producer_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Subsystem", "Subsystem")
                        .WithMany("Elements")
                        .HasForeignKey("Subsystem_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DC");

                    b.Navigation("MTTFd_result");

                    b.Navigation("Producer");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Machine", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.EvaluationMethod", "EvaluationMethod")
                        .WithMany("Machines")
                        .HasForeignKey("EvaluationMethod_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineType_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Producer", "Producer")
                        .WithMany("Machines")
                        .HasForeignKey("Producer_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfLogic", "TypeOfLogic")
                        .WithMany("Machines")
                        .HasForeignKey("TypeOfLogic_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EvaluationMethod");

                    b.Navigation("MachineType");

                    b.Navigation("Producer");

                    b.Navigation("TypeOfLogic");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.SafetyFunction", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Av", "Av")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("Av_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.EvaluationMethod", "EvaluationMethod")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("EvaluationMethod_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.F", "F")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("F_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Fr", "Fr")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("Fr_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.PL", "PL_result")
                        .WithMany("SafetyFunctions_PL_result")
                        .HasForeignKey("PL_result_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.PL", "PLr")
                        .WithMany("SafetyFunctions_PLr")
                        .HasForeignKey("PLr_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.P", "P")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("P_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Pr", "Pr")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("Pr_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.PFHd", "SILCL")
                        .WithMany("SafetyFunctions_SILCL")
                        .HasForeignKey("SILCL_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.PFHd", "SIL_result")
                        .WithMany("SafetyFunctions_SIL_result")
                        .HasForeignKey("SIL_result_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.S", "S")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("S_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Se", "Se")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("Se_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfFunction", "TypeOfFunction")
                        .WithMany("SafetyFunctions")
                        .HasForeignKey("TypeOfFunction_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Av");

                    b.Navigation("EvaluationMethod");

                    b.Navigation("F");

                    b.Navigation("Fr");

                    b.Navigation("P");

                    b.Navigation("PL_result");

                    b.Navigation("PLr");

                    b.Navigation("Pr");

                    b.Navigation("S");

                    b.Navigation("Se");

                    b.Navigation("SIL_result");

                    b.Navigation("SILCL");

                    b.Navigation("TypeOfFunction");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Subsystem", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Architecture", "Architecture")
                        .WithMany("Subsystems")
                        .HasForeignKey("Architecture_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.CFF", "CFF")
                        .WithMany("Subsystems")
                        .HasForeignKey("CFF_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.Category", "Category")
                        .WithMany("Subsystems")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.DC", "DC_result")
                        .WithMany("Subsystems")
                        .HasForeignKey("DC_result_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.HFT", "HFT")
                        .WithMany("Subsystems")
                        .HasForeignKey("HFT_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.MTTFd", "MTTFd_result")
                        .WithMany("Subsystems")
                        .HasForeignKey("MTTFd_result_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.PFHd", "PFHd_result")
                        .WithMany("Subsystems")
                        .HasForeignKey("PFHd_result_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.PL", "PL_result")
                        .WithMany("Subsystems")
                        .HasForeignKey("PL_result_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfSubsystem", "TypeOfSubsystem")
                        .WithMany("Subsystems")
                        .HasForeignKey("TypeOfSubsystem_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Architecture");

                    b.Navigation("Category");

                    b.Navigation("CFF");

                    b.Navigation("DC_result");

                    b.Navigation("HFT");

                    b.Navigation("MTTFd_result");

                    b.Navigation("PFHd_result");

                    b.Navigation("PL_result");

                    b.Navigation("TypeOfSubsystem");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.System.State", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.System.Entity", "Entity")
                        .WithMany("States")
                        .HasForeignKey("Entity_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.System.StateTransition", b =>
                {
                    b.HasOne("SSEA.DAL.Entities.System.State", "CurrentState")
                        .WithMany("StateTransitions_current")
                        .HasForeignKey("CurrentState_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SSEA.DAL.Entities.System.State", "NextState")
                        .WithMany("StateTransitions_next")
                        .HasForeignKey("NextState_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CurrentState");

                    b.Navigation("NextState");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.CCF", b =>
                {
                    b.Navigation("SubsystemCCFs");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.DC", b =>
                {
                    b.Navigation("Categories_DC_max");

                    b.Navigation("Categories_DC_min");

                    b.Navigation("Elements");

                    b.Navigation("Subsystems");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.EvaluationMethod", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.MachineType", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.Norm", b =>
                {
                    b.Navigation("MachineNorms");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfFunction", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfLogic", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.Common.TypeOfSubsystem", b =>
                {
                    b.Navigation("Subsystems");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.Category", b =>
                {
                    b.Navigation("Subsystems");

                    b.Navigation("TypeOfLogics");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.F", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.MTTFd", b =>
                {
                    b.Navigation("Categories_MTTFd_max");

                    b.Navigation("Categories_MTTFd_min");

                    b.Navigation("Elements");

                    b.Navigation("Subsystems");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.P", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.PL", b =>
                {
                    b.Navigation("SafetyFunctions_PL_result");

                    b.Navigation("SafetyFunctions_PLr");

                    b.Navigation("Subsystems");

                    b.Navigation("TypeOfLogics");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.PL_methodics.S", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Architecture", b =>
                {
                    b.Navigation("Subsystems");

                    b.Navigation("TypeOfLogics");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Av", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.CFF", b =>
                {
                    b.Navigation("Subsystems");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Fr", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.HFT", b =>
                {
                    b.Navigation("Architectures");

                    b.Navigation("Subsystems");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.PFHd", b =>
                {
                    b.Navigation("Architectures");

                    b.Navigation("SafetyFunctions_SIL_result");

                    b.Navigation("SafetyFunctions_SILCL");

                    b.Navigation("Subsystems");

                    b.Navigation("TypeOfLogics");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Pr", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.SFF", b =>
                {
                    b.Navigation("ElementSFFs");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.CodeListEntities.SIL_methodics.Se", b =>
                {
                    b.Navigation("SafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.AccessPoint", b =>
                {
                    b.Navigation("AccessPointSafetyFunctions");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Element", b =>
                {
                    b.Navigation("ElementSFFs");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Machine", b =>
                {
                    b.Navigation("AccessPoints");

                    b.Navigation("MachineNorms");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Producer", b =>
                {
                    b.Navigation("Elements");

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.SafetyFunction", b =>
                {
                    b.Navigation("AccessPointSafetyFunctions");

                    b.Navigation("SafetyFunctionSubsystems");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.SafetyEvaluation.MainEntities.Subsystem", b =>
                {
                    b.Navigation("Elements");

                    b.Navigation("SafetyFunctionSubsystems");

                    b.Navigation("SubsystemCCFs");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.System.Entity", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("SSEA.DAL.Entities.System.State", b =>
                {
                    b.Navigation("StateTransitions_current");

                    b.Navigation("StateTransitions_next");
                });
#pragma warning restore 612, 618
        }
    }
}
