@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider DisableBackdropClick="true"/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudAppBarSpacer />
        <MudText Typo="Typo.h6" Style="margin-right: 10px;">@userName</MudText>
        <MudDivider Vertical="true" FlexItem="true" Style="margin: 15px;"/>
        <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Edge="Edge.End" OnClick="@Logout" />
    </MudAppBar>
    <MudDrawer @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {

    [Inject]
    protected AuthenticationService authenticationService { get; set; }

    [Inject]
    protected NavigationManager navigationManager { get; set; }

    [Inject]
    protected AuthenticationStateProvider authStateProvider { get; set; }

    private bool drawerOpen = true;
    private string userName = string.Empty;

    private void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    private async void Logout()
    {
        await authenticationService.LogoutUserAsync();
        navigationManager.NavigateTo("/auth/login");
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var claims = authState.User.Claims;
        var firstName = claims.First(c => c.Type == "FirstName").Value;
        var lastName = claims.First(c => c.Type == "LastName").Value;
        userName = $"{firstName} {lastName}";
    }

}
