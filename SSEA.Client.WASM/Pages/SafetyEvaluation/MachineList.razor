@page "/safetyEvaluation/machineList"

@layout MainLayout

@inject IClientService clientService
@inject CodeListFacade codeListFacade
@inject MachineFacade machineFacade
@inject NavigationManager navigationManager

@attribute [Authorize]

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="padding-top: 10px;">
    <MudCard Elevation="3">
        <MudCardHeader Style="padding-bottom: 0px;">
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Machine list</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudButton @onclick="CreateNew" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Create" Color="Color.Primary" Style="margin-top:5px; margin-right:8px;">Create new machine</MudButton>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <hr />
            <MudGrid Style="margin-top: 0px;">
                <MudItem xs="1" Style="padding-bottom: 14px; padding-top: 18px;">
                    <MudButton @onclick="Search" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Search" Size="Size.Large" Style="width: 100%; height: 100%;"></MudButton>
                </MudItem>
                <MudItem xs="11">
                    <MudGrid>
                        <MudItem xs="3">
                            <MudTextField @bind-Value="machineName" Label="Machine name" Variant="Variant.Outlined"></MudTextField>
                        </MudItem>
                        <MudItem xs="3">
                            <MudSelect @bind-Value="machineTypeId" T="int" Label="Machine type" Strict="true" Variant="Variant.Outlined" Format="F2">
                                <MudSelectItem T="int" Value="@(0)">All</MudSelectItem>
                                @foreach (var item in machineTypes)
                                {
                                    <MudSelectItem T="int" Value="@(item.Id)">@item.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="3">
                            <MudSelect @bind-Value="evaluationMethodId" T="int" Label="Evaluation method" Strict="true" Variant="Variant.Outlined" Format="F2">
                                <MudSelectItem T="int" Value="@(0)">All</MudSelectItem>
                                @foreach (var item in evaluationMethods)
                                {
                                    <MudSelectItem T="int" Value="@(item.Id)">@item.Shortcut</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="3">
                            <MudSelect @bind-Value="producerId" T="int" Label="Producer" Strict="true" Variant="Variant.Outlined" Format="F2">
                                <MudSelectItem T="int" Value="@(0)">All</MudSelectItem>
                                @foreach (var item in producers)
                                {
                                    <MudSelectItem T="int" Value="@(item.Id)">@item.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudGrid>
            <hr style="margin-top:16px;"/>
            <MudTable T="MachineListModel" OnRowClick="@(args => GoToMachineDetail(args))" Items="@machines" Hover="true" Elevation="5" Style="margin-top: 20px;" Dense="true">
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>State</MudTh>
                    <MudTh>Machine type</MudTh>
                    <MudTh>Type of logic</MudTh>
                    <MudTh>Producer</MudTh>
                    <MudTh>Evaluation method</MudTh>
                    <MudTh>Communication</MudTh>
                    <MudTh>Actions</MudTh>
                </HeaderContent>
                <ColGroup>
                    <col style="width:20%;" />
                    <col style="width:10%;" />
                    <col style="width:15%;" />
                    <col style="width:15%;" />
                    <col style="width:15%;" />
                    <col style="width:10%;" />
                    <col style="width:10%;" />
                    <col style="width:5%;" />
                </ColGroup>
                <RowTemplate>
                    <MudTd DataLabel="Name">@context.Name</MudTd>
                    <MudTd DataLabel="State">@context.CurrentState.Name</MudTd>
                    <MudTd DataLabel="Machine type">@context.MachineType</MudTd>
                    <MudTd DataLabel="Type of logic">@context.TypeOfLogic</MudTd>
                    <MudTd DataLabel="Producer">@context.Producer</MudTd>
                    <MudTd DataLabel="Evaluation method">@context.EvaluationMethod</MudTd>
                    <MudTd DataLabel="Communication">@context.Communication</MudTd>
                    <MudTd DataLabel="Actions">
                        <MudIconButton Icon="@Icons.Material.Filled.Delete"></MudIconButton>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[]{10, 50}" />
                </PagerContent>
            </MudTable>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {

    private ICollection<MachineListModel> machines = new List<MachineListModel>();

    private string machineName = string.Empty;
    private int machineTypeId;
    private int evaluationMethodId;
    private int producerId;

    private ICollection<EvaluationMethodModel> evaluationMethods = new List<EvaluationMethodModel>();
    private ICollection<MachineTypeModel> machineTypes = new List<MachineTypeModel>();
    private ICollection<ProducerModel> producers = new List<ProducerModel>();

    protected override async Task OnInitializedAsync()
    {
        evaluationMethods = await codeListFacade.GetAllEvaluationMethodsAsync();
        machineTypes = await codeListFacade.GetAllMachineTypesAsync();
        producers = await codeListFacade.GetAllProducersAsync();
    }

    private void CreateNew()
    {
        navigationManager.NavigateTo("/safetyEvaluation/machineInsert");
    }

    // TODO: add logic for searching
    private async void Search()
    {
        machines = await clientService.MachineGetAllAsync();
        StateHasChanged();
    }

    private void GoToMachineDetail(TableRowClickEventArgs<MachineListModel> args)
    {
        navigationManager.NavigateTo($"/safetyEvaluation/machineDetail/{args.Item.Id}");
    }

}
